{"version":3,"sources":["context/alertas/alertaContext.js","context/autenticacion/authContext.js","components/auth/Login.js","components/auth/NuevaCuenta.js","context/proyectos/proyectoContext.js","components/proyectos/NuevoProyecto.js","context/tareas/tareaContext.js","components/proyectos/Proyecto.js","components/proyectos/ListadoProyectos.js","components/layout/Sidebar.js","components/layout/Barra.js","components/tareas/FormTarea.js","components/tareas/Tarea.js","components/tareas/ListadoTareas.js","components/proyectos/Proyectos.js","types/index.js","context/proyectos/proyectoReducer.js","config/axios.js","context/proyectos/proyectoState.js","context/tareas/tareaReducer.js","context/tareas/tareaState.js","context/alertas/alertaReducer.js","context/alertas/alertaState.js","context/autenticacion/authReducer.js","config/token.js","context/autenticacion/authState.js","components/rutas/RutaPrivada.js","App.js","reportWebVitals.js","index.js"],"names":["alertaContext","createContext","authContext","Login","props","useContext","AlertaContext","alerta","mostrarAlerta","AuthContext","mensaje","autenticado","iniciarSesion","useEffect","history","push","msg","categoria","useState","email","password","usuario","setUser","handleChange","e","target","name","value","className","onSubmit","preventDefault","trim","htmlFor","type","id","placeholder","onChange","to","NuevaCuenta","registrarUsuario","nombre","confirmar","length","proyectoContext","NuevoProyecto","proyectosContext","errorFormulario","formulario","mostrarFormulario","agregarProyecto","mostrarError","proyecto","setProyecto","onClick","tareaContext","Proyecto","proyectoActual","obtenerTareas","_id","ListadoProyectos","alertasContext","proyectos","obtenerProyectos","TransitionGroup","map","CSSTransition","timeout","classNames","Sidebar","Barra","usuarioAutenticado","cerrarSesion","FormTarea","tarea","setTarea","tareasContext","errorTarea","agregarTarea","validarTarea","tareaSeleccionada","actualizarTarea","limpiarTarea","Tarea","context","eliminarTarea","guardarTareaActual","cambiarEstado","estado","seleccionarTarea","ListadoTareas","eliminarProyecto","tareasProyecto","Proyectos","FORMULARIO_PROYECTO","OBTENER_PROYECTOS","AGREGAR_PROYECTO","VALIDAR_FORMULARIO","PROYECTO_ACTUAL","ELIMINAR_PROYECTO","PROYECTO_ERROR","TAREAS_PROYECTO","AGREGAR_TAREA","VALIDAR_TAREA","ELIMINAR_TAREA","TAREA_ACTUAL","ACTUALIZAR_TAREA","LIMPIAR_TAREA","MOSTRAR_ALERTA","OCULTAR_ALERTA","REGISTRO_EXITOSO","REGISTRO_ERROR","OBTENER_USUARIO","LOGIN_EXITOSO","LOGIN_ERROR","CERRAR_SESION","state","action","payload","filter","clienteAxios","axios","create","baseURL","process","ProyectoState","useReducer","proyectoReducer","dispatch","a","get","resultado","data","console","error","post","proyectoId","delete","Provider","children","initialState","TareaState","TareaReducer","params","response","tareas","log","put","AlertaState","alertaReducer","setTimeout","localStorage","setItem","token","cargando","removeItem","tokenAuth","defaults","headers","common","AuthState","getItem","AuthReducer","datos","respuesta","RutaPrivada","Component","component","render","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"iNAEeA,EADOC,0BCCPC,EADKD,0B,OC2FLE,EAxFD,SAACC,GAEb,IAAMJ,EAAgBK,qBAAWC,GACzBC,EAA0BP,EAA1BO,OAAQC,EAAkBR,EAAlBQ,cAGVN,EAAcG,qBAAWI,GACvBC,EAAwCR,EAAxCQ,QAASC,EAA+BT,EAA/BS,YAAaC,EAAkBV,EAAlBU,cAI9BC,qBAAU,WACJF,GACFP,EAAMU,QAAQC,KAAK,cAEjBL,GACFF,EAAcE,EAAQM,IAAKN,EAAQO,aAGpC,CAACP,EAASC,EAAaP,EAAMU,UAnBT,MAoBII,mBAAS,CAClCC,MAAO,GACPC,SAAU,KAtBW,mBAoBhBC,EApBgB,KAoBPC,EApBO,KAwBfH,EAAoBE,EAApBF,MAAOC,EAAaC,EAAbD,SACTG,EAAe,SAACC,GACpBF,EAAQ,2BACHD,GADE,kBAEJG,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAa9B,OACE,sBAAKC,UAAU,eAAf,UACGrB,EACC,qBAAKqB,UAAS,iBAAYrB,EAAOU,WAAjC,SAA+CV,EAAOS,MACpD,KACJ,sBAAKY,UAAU,8BAAf,UACE,gDACA,uBAAMC,SAjBS,SAACL,GACpBA,EAAEM,iBAEmB,KAAjBX,EAAMY,QAAqC,KAApBX,EAASW,QAClCvB,EAAc,oCAAqC,gBAIrDI,EAAc,CAAEO,QAAOC,cASnB,UACE,sBAAKQ,UAAU,aAAf,UACE,uBAAOI,QAAQ,QAAf,mBACA,uBACEC,KAAK,QACLC,GAAG,QACHR,KAAK,QACLS,YAAY,WACZC,SAAUb,EACVI,MAAOR,OAGX,sBAAKS,UAAU,aAAf,UACE,uBAAOI,QAAQ,WAAf,sBACA,uBACEC,KAAK,WACLC,GAAG,WACHR,KAAK,WACLS,YAAY,cACZC,SAAUb,EACVI,MAAOP,OAGX,qBAAKQ,UAAU,aAAf,SACE,uBACEK,KAAK,SACLL,UAAU,6BACVD,MAAM,wBAIZ,eAAC,IAAD,CAAMU,GAAI,gBAAiBT,UAAU,gBAArC,UACG,IADH,iBAEiB,cCkDVU,EAnIK,SAAClC,GAEnB,IAAMJ,EAAgBK,qBAAWC,GACzBC,EAA0BP,EAA1BO,OAAQC,EAAkBR,EAAlBQ,cAGVN,EAAcG,qBAAWI,GACvBC,EAA2CR,EAA3CQ,QAASC,EAAkCT,EAAlCS,YAAa4B,EAAqBrC,EAArBqC,iBAG9B1B,qBAAU,WACJF,GACFP,EAAMU,QAAQC,KAAK,cAEjBL,GACFF,EAAcE,EAAQM,IAAKN,EAAQO,aAEpC,CAACP,EAASC,EAAaP,EAAMU,UAjBH,MAoBFI,mBAAS,CAClCsB,OAAQ,GACRrB,MAAO,GACPC,SAAU,GACVqB,UAAW,KAxBgB,mBAoBtBpB,EApBsB,KAoBbC,EApBa,KA0BrBkB,EAAuCnB,EAAvCmB,OAAQrB,EAA+BE,EAA/BF,MAAOC,EAAwBC,EAAxBD,SAAUqB,EAAcpB,EAAdoB,UAC3BlB,EAAe,SAACC,GACpBF,EAAQ,2BACHD,GADE,kBAEJG,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAiC9B,OACE,sBAAKC,UAAU,eAAf,UACGrB,EACC,qBAAKqB,UAAS,iBAAYrB,EAAOU,WAAjC,SAA+CV,EAAOS,MACpD,KACJ,sBAAKY,UAAU,8BAAf,UACE,oDACA,uBAAMC,SArCS,SAACL,GACpBA,EAAEM,iBAGkB,KAAlBU,EAAOT,QACU,KAAjBZ,EAAMY,QACc,KAApBX,EAASW,QACY,KAArBU,EAAUV,OAMRX,EAASsB,OAAS,EACpBlC,EACE,gDACA,gBAMAY,IAAaqB,EAMjBF,EAAiB,CAAEC,SAAQrB,QAAOC,aALhCZ,EAAc,kCAAmC,gBAdjDA,EAAc,oCAAqC,iBA4BjD,UACE,sBAAKoB,UAAU,aAAf,UACE,uBAAOI,QAAQ,SAAf,+BACA,uBACEC,KAAK,OACLC,GAAG,SACHR,KAAK,SACLS,YAAY,YACZC,SAAUb,EACVI,MAAOa,OAGX,sBAAKZ,UAAU,aAAf,UACE,uBAAOI,QAAQ,QAAf,mBACA,uBACEC,KAAK,QACLC,GAAG,QACHR,KAAK,QACLS,YAAY,WACZC,SAAUb,EACVI,MAAOR,OAGX,sBAAKS,UAAU,aAAf,UACE,uBAAOI,QAAQ,WAAf,sBACA,uBACEC,KAAK,WACLC,GAAG,WACHR,KAAK,WACLS,YAAY,cACZC,SAAUb,EACVI,MAAOP,OAGX,sBAAKQ,UAAU,aAAf,UACE,uBAAOI,QAAQ,YAAf,gCACA,uBACEC,KAAK,WACLC,GAAG,YACHR,KAAK,YACLS,YAAY,kBACZC,SAAUb,EACVI,MAAOc,OAGX,qBAAKb,UAAU,aAAf,SACE,uBACEK,KAAK,SACLL,UAAU,6BACVD,MAAM,qBAIZ,cAAC,IAAD,CAAMU,GAAI,IAAKT,UAAU,gBAAzB,4CC3HOe,EAFS1C,0BC2ET2C,EA1EO,WAEpB,IAAMC,EAAmBxC,qBAAWsC,GAElCG,EAKED,EALFC,gBACAC,EAIEF,EAJFE,WACAC,EAGEH,EAHFG,kBACAC,EAEEJ,EAFFI,gBACAC,EACEL,EADFK,aARwB,EAWMhC,mBAAS,CACvCsB,OAAQ,KAZgB,mBAWnBW,EAXmB,KAWTC,EAXS,KAclBZ,EAAWW,EAAXX,OA2BR,OACE,qCACE,yBACEZ,UAAU,6BACVK,KAAK,SACLoB,QAToB,WACxBL,KAKE,2BAKiB,OACP,IACTD,EACC,uBAAMnB,UAAU,4BAA4BC,SA9B7B,SAACL,GACpBA,EAAEM,iBAEa,KAAXU,GAMJS,EAAgBE,GAGhBC,EAAY,CACVZ,OAAQ,MATRU,KA0BE,UACE,uBACEjB,KAAK,OACLL,UAAU,aACVO,YAAY,kBACZT,KAAK,SACLU,SA1Ce,SAACZ,GACxB4B,EAAY,2BACPD,GADM,kBAER3B,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAwCpBA,MAAOa,IACN,IACH,uBACEP,KAAK,SACLL,UAAU,6BACVD,MAAM,wBAGR,KACHmB,EACC,mBAAGlB,UAAU,gBAAb,sCACE,SCrEK0B,EADMrD,0BC4BNsD,EA1BE,SAAC,GAAkB,IAAhBJ,EAAe,EAAfA,SAGVK,EADiBnD,qBAAWsC,GAC5Ba,eAGAC,EADcpD,qBAAWiD,GACzBG,cAOR,OACE,6BACE,wBACExB,KAAK,SACLL,UAAU,gBACVyB,QAAS,kBATcnB,EASYiB,EAASO,IARhDF,EAAetB,QACfuB,EAAcvB,GAFY,IAACA,GAMzB,SAKGiB,EAASX,Y,gBCcHmB,EAjCU,WACvB,IAAMC,EAAiBvD,qBAAWL,GAC1BO,EAA0BqD,EAA1BrD,OAAQC,EAAkBoD,EAAlBpD,cAEVqC,EAAmBxC,qBAAWsC,GAC5BjC,EAAyCmC,EAAzCnC,QAASmD,EAAgChB,EAAhCgB,UAAWC,EAAqBjB,EAArBiB,iBAS5B,OAPAjD,qBAAU,WACJH,GACFF,EAAcE,EAAQM,IAAKN,EAAQO,WAErC6C,MAEC,CAACpD,IACqB,IAArBmD,EAAUnB,OACL,wEAGP,qBAAId,UAAU,oBAAd,UACGrB,EACC,qBAAKqB,UAAS,iBAAYrB,EAAOU,WAAjC,SAA+CV,EAAOS,MACpD,KACJ,cAAC+C,EAAA,EAAD,UACGF,EAAUG,KAAI,SAACb,GAAD,OACb,cAACc,EAAA,EAAD,CAAkCC,QAAS,IAAKC,WAAW,WAA3D,SACE,cAAC,EAAD,CAAUhB,SAAUA,KADFA,EAASO,cCVxBU,EAhBC,WACd,OACE,kCACE,+BACG,IADH,QAEO,6CAEP,cAAC,EAAD,IACA,sBAAKxC,UAAU,YAAf,UACE,iDACA,cAAC,EAAD,WCkBOyC,EA5BD,WACZ,IAAMnE,EAAcG,qBAAWI,GACvB6D,EAA8CpE,EAA9CoE,mBAAoBjD,EAA0BnB,EAA1BmB,QAASkD,EAAiBrE,EAAjBqE,aAMrC,OALA1D,qBAAU,WACRyD,MAEC,IAGD,yBAAQ1C,UAAU,aAAlB,UACGP,EACC,oBAAGO,UAAU,iBAAb,kBACO,+BAAOP,EAAQmB,YAEpB,KAEJ,qBAAKZ,UAAU,gBAAf,SACE,wBACEA,UAAU,8BACVyB,QAAS,kBAAMkB,KAFjB,iCCiFOC,EAjGG,WAAO,IAAD,EACItD,mBAAS,CACjCsB,OAAQ,KAFY,mBACfiC,EADe,KACRC,EADQ,KAMdvB,EAFiB9C,qBAAWsC,GAE5BQ,SAEFwB,EAAgBtE,qBAAWiD,GAE/BsB,EAOED,EAPFC,WACAC,EAMEF,EANFE,aACAC,EAKEH,EALFG,aACArB,EAIEkB,EAJFlB,cACAsB,EAGEJ,EAHFI,kBACAC,EAEEL,EAFFK,gBACAC,EACEN,EADFM,aAIFpE,qBAAU,WAEN6D,EADwB,OAAtBK,EACOA,EAEA,CACPvC,OAAQ,OAGX,CAACuC,IA5BkB,IA8BdvC,EAAWiC,EAAXjC,OAER,IAAKW,EAAU,OAAO,KAhCA,IAkCfK,EAlCe,YAkCGL,EAlCH,MAqEtB,OACE,sBAAKvB,UAAU,aAAf,UACE,uBAAMC,SA7BW,SAACL,GACpBA,EAAEM,iBAEoB,KAAlBU,EAAOT,QAKe,OAAtBgD,GAGFN,EAAMtB,SAAWK,EAAeE,IAChCmB,EAAaJ,KAGbO,EAAgBP,GAChBQ,KAIFxB,EAAcD,EAAetB,IAE7BwC,EAAS,CACPlC,OAAQ,MAnBRsC,KAyBA,UACE,qBAAKlD,UAAU,mBAAf,SACE,uBACEK,KAAK,OACLL,UAAU,aACVO,YAAY,kBACZT,KAAK,SACLC,MAAOa,EACPJ,SA3CW,SAACZ,GACpBkD,EAAS,2BACJD,GADG,kBAELjD,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,cA2CxB,qBAAKC,UAAU,mBAAf,SACE,uBACEK,KAAK,SACLL,UAAU,wCACVD,MAAOoD,EAAoB,eAAiB,uBAIjDH,EACC,mBAAGhD,UAAU,gBAAb,kDACE,SCnBKsD,EAzED,SAAC,GAAe,IAAbT,EAAY,EAAZA,MAEPtB,EADiB9C,qBAAWsC,GAC5BQ,SAEFgC,EAAU9E,qBAAWiD,GAEzB8B,EAIED,EAJFC,cACA3B,EAGE0B,EAHF1B,cACAuB,EAEEG,EAFFH,gBACAK,EACEF,EADFE,mBAGK7B,EAZoB,YAYFL,EAZE,MAkBrBmC,EAAgB,SAACb,GACjBA,EAAMc,OACRd,EAAMc,QAAS,EAEfd,EAAMc,QAAS,EAEjBP,EAAgBP,IAOlB,OACE,qBAAI7C,UAAU,eAAd,UACE,8BAAI6C,EAAMjC,OAAV,OACA,qBAAKZ,UAAU,SAAf,SACG6C,EAAMc,OACL,wBACEtD,KAAK,SACLL,UAAU,WACVyB,QAAS,kBAAMiC,EAAcb,IAH/B,sBAQA,wBACExC,KAAK,SACLL,UAAU,aACVyB,QAAS,kBAAMiC,EAAcb,IAH/B,0BASJ,sBAAK7C,UAAU,WAAf,UACE,wBACEK,KAAK,SACLL,UAAU,mBACVyB,QAAS,kBA9BQ,SAACoB,GACxBY,EAAmBZ,GA6BEe,CAAiBf,IAHlC,oBAOA,wBACExC,KAAK,SACLL,UAAU,qBACVyB,QAAS,kBAlDOnB,EAkDcuC,EAAMf,IAjD1C0B,EAAclD,EAAIsB,EAAeE,UACjCD,EAAcD,EAAetB,IAFR,IAACA,GA+ClB,6BCdOuD,EA7CO,WAEpB,IAAM5C,EAAmBxC,qBAAWsC,GAC5BQ,EAA+BN,EAA/BM,SAAUuC,EAAqB7C,EAArB6C,iBAGVC,EADctF,qBAAWiD,GACzBqC,eAGR,IAAKxC,EAAU,OAAO,wDATI,IAYnBK,EAZmB,YAYDL,EAZC,MAgB1B,OACE,qCACE,4CAAeK,EAAehB,UAC9B,oBAAIZ,UAAU,iBAAd,SAC6B,IAA1B+D,EAAejD,OACd,oBAAId,UAAU,QAAd,SACE,gDAGF,cAACmC,EAAA,EAAD,UACG4B,EAAe3B,KAAI,SAACS,GAAD,OAClB,cAACR,EAAA,EAAD,CAA8BC,QAAS,IAAKC,WAAW,QAAvD,SACE,cAAC,EAAD,CAAOM,MAAOA,KADIA,EAAMvC,WAOlC,wBACED,KAAK,SACLL,UAAU,mBACVyB,QAxBkB,WACtBqC,EAAiBlC,EAAeE,MAoB9B,wCCXSkC,EAvBG,WAChB,IACQtB,EADYjE,qBAAWI,GACvB6D,mBAKR,OAJAzD,qBAAU,WACRyD,MAEC,IAED,sBAAK1C,UAAU,iBAAf,UACE,cAAC,EAAD,IACA,sBAAKA,UAAU,oBAAf,UACE,cAAC,EAAD,IACA,iCACE,cAAC,EAAD,IACA,qBAAKA,UAAU,oBAAf,SACE,cAAC,EAAD,gB,gCCpBCiE,EAAsB,sBACtBC,EAAoB,oBACpBC,EAAmB,mBACnBC,EAAqB,qBACrBC,EAAkB,kBAClBC,EAAoB,oBACpBC,EAAiB,iBAEjBC,EAAkB,kBAClBC,EAAgB,gBAChBC,EAAgB,gBAChBC,EAAiB,iBAEjBC,EAAe,eACfC,EAAmB,mBACnBC,EAAgB,gBAEhBC,EAAiB,kBACjBC,EAAiB,iBAEjBC,EAAmB,mBACnBC,EAAiB,iBACjBC,EAAkB,kBAClBC,EAAgB,gBAChBC,GAAc,cACdC,GAAgB,gBChBd,YAACC,EAAOC,GACrB,OAAQA,EAAOnF,MACb,KAAK4D,EACH,OAAO,2BACFsB,GADL,IAEEpE,YAAY,IAEhB,KAAKgD,EACH,OAAO,2BACFoB,GADL,IAEEtD,UAAU,GAAD,mBAAMsD,EAAMtD,WAAZ,CAAuBuD,EAAOC,UACvCtE,YAAY,EACZD,iBAAiB,IAErB,KAAKgD,EACH,OAAO,2BACFqB,GADL,IAEEtD,UAAWuD,EAAOC,UAEtB,KAAKrB,EACH,OAAO,2BACFmB,GADL,IAEErE,iBAAiB,IAErB,KAAKmD,EACH,OAAO,2BACFkB,GADL,IAEEhE,SAAUgE,EAAMtD,UAAUyD,QACxB,SAACnE,GAAD,OAAcA,EAASO,MAAQ0D,EAAOC,aAG5C,KAAKnB,EACH,OAAO,2BACFiB,GADL,IAEEtD,UAAWsD,EAAMtD,UAAUyD,QACzB,SAACnE,GAAD,OAAcA,EAASO,MAAQ0D,EAAOC,WAExClE,SAAU,OAEd,KAAKgD,EACH,OAAO,2BACFgB,GADL,IAEEzG,QAAS0G,EAAOC,UAGpB,QACE,OAAOF,I,SCnDEI,G,QAHMC,EAAMC,OAAO,CAChCC,QAASC,8CCyGIC,GA9FO,SAACxH,GACrB,IAD+B,EASLyH,qBAAWC,GARhB,CACnBjE,UAAW,GACXd,YAAY,EACZD,iBAAiB,EACjBK,SAAU,KACVzC,QAAS,OANoB,mBASxByG,EATwB,KASjBY,EATiB,KAkBzBjE,EAAgB,uCAAG,4BAAAkE,EAAA,+EAEGT,GAAaU,IAAI,kBAFpB,OAEfC,EAFe,OAGrBH,EAAS,CACP9F,KAAM6D,EACNuB,QAASa,EAAUC,KAAKtE,YALL,gDAQrBuE,QAAQC,MAAR,MARqB,yDAAH,qDAYhBpF,EAAe,uCAAG,WAAOE,GAAP,eAAA6E,EAAA,+EAGIT,GAAae,KAAK,iBAAkBnF,GAHxC,OAGd+E,EAHc,OAIpBH,EAAS,CACP9F,KAAM8D,EACNsB,QAASa,EAAUC,OAND,gDASpBC,QAAQC,MAAR,MAToB,yDAAH,sDA0Bf3C,EAAgB,uCAAG,WAAO6C,GAAP,SAAAP,EAAA,+EAEfT,GAAaiB,OAAb,yBAAsCD,IAFvB,OAGrBR,EAAS,CACP9F,KAAMiE,EACNmB,QAASkB,IALU,gDAYrBR,EAAS,CACP9F,KAAMkE,EACNkB,QANa,CACbrG,IAAK,gBACLC,UAAW,kBAVQ,yDAAH,sDAkBtB,OACE,cAAC,EAAgBwH,SAAjB,CACE9G,MAAO,CACLkC,UAAWsD,EAAMtD,UACjBd,WAAYoE,EAAMpE,WAClBrC,QAASyG,EAAMzG,QACfoC,gBAAiBqE,EAAMrE,gBACvBK,SAAUgE,EAAMhE,SAChBH,kBAvEoB,WACxB+E,EAAS,CACP9F,KAAM4D,KAsEJ/B,mBACAb,kBACAC,aA1Ce,WACnB6E,EAAS,CACP9F,KAAM+D,KAyCJxC,eArCiB,SAAC+E,GACtBR,EAAS,CACP9F,KAAMgE,EACNoB,QAASkB,KAmCP7C,oBAZJ,SAeGtF,EAAMsI,YC9FE,YAACvB,EAAOC,GACrB,OAAQA,EAAOnF,MACb,KAAKmE,EACH,OAAO,2BACFe,GADL,IAEExB,eAAgByB,EAAOC,UAE3B,KAAKhB,EACH,OAAO,2BACFc,GADL,IAEExB,eAAe,CAAEyB,EAAOC,SAAV,mBAAsBF,EAAMxB,iBAC1Cf,YAAY,IAEhB,KAAK0B,EACH,OAAO,2BACFa,GADL,IAEEvC,YAAY,IAEhB,KAAK2B,EACH,OAAO,2BACFY,GADL,IAEExB,eAAgBwB,EAAMxB,eAAe2B,QACnC,SAAC7C,GAAD,OAAWA,EAAMf,MAAQ0D,EAAOC,aAGtC,KAAKZ,EACH,OAAO,2BACFU,GADL,IAEExB,eAAgBwB,EAAMxB,eAAe3B,KAAI,SAACS,GAAD,OACvCA,EAAMf,MAAQ0D,EAAOC,QAAQ3D,IAAM0D,EAAOC,QAAU5C,OAG1D,KAAK+B,EACH,OAAO,2BACFW,GADL,IAEEpC,kBAAmBqC,EAAOC,UAE9B,KAAKX,EACH,OAAO,2BACFS,GADL,IAEEpC,kBAAmB,OAEvB,QACE,OAAOoC,ICxCPwB,GAAe,CACnBhD,eAAgB,GAChBf,YAAY,EACZG,kBAAmB,MAiGN6D,GA/FI,SAACxI,GAAU,MAEFyH,qBAAWgB,GAAcF,IAFvB,mBAErBxB,EAFqB,KAEdY,EAFc,KAMtBtE,EAAa,uCAAG,WAAON,GAAP,eAAA6E,EAAA,+EAEKT,GAAaU,IAAI,cAAe,CACrDa,OAAQ,CAAE3F,cAHM,OAEZ4F,EAFY,OAMlBhB,EAAS,CACP9F,KAAMmE,EACNiB,QAAS0B,EAASZ,KAAKa,SARP,gDAWlBZ,QAAQa,IAAR,MAXkB,yDAAH,sDAcbpE,EAAY,uCAAG,WAAOJ,GAAP,SAAAuD,EAAA,+EAEMT,GAAae,KAAK,cAAe7D,GAFvC,cAGjBsD,EAAS,CACP9F,KAAMoE,EACNgB,QAAS5C,IALM,gDAQjB2D,QAAQC,MAAR,MARiB,yDAAH,sDAgBZjD,EAAa,uCAAG,WAAOlD,EAAIiB,GAAX,SAAA6E,EAAA,+EAEZT,GAAaiB,OAAb,sBAAmCtG,GAAM,CAC7C4G,OAAQ,CAAE3F,cAHM,OAKlB4E,EAAS,CACP9F,KAAMsE,EACNc,QAASnF,IAPO,uGAAH,wDAWb8C,EAAe,uCAAG,WAAOP,GAAP,eAAAuD,EAAA,6DACtBI,QAAQa,IAAIxE,GADU,kBAGI8C,GAAa2B,IAAb,sBACPzE,EAAMf,KACrBe,GALkB,OAGdyD,EAHc,OAOpBE,QAAQa,IAAIf,GACZH,EAAS,CACP9F,KAAMwE,EACNY,QAASa,EAAUC,KAAK1D,QAVN,gDAapB2D,QAAQC,MAAR,MAboB,yDAAH,sDA4BrB,OACE,cAAC,EAAaI,SAAd,CACE9G,MAAO,CACLgE,eAAgBwB,EAAMxB,eACtBf,WAAYuC,EAAMvC,WAClBG,kBAAmBoC,EAAMpC,kBACzBtB,gBACAoB,eACAC,aApDe,WACnBiD,EAAS,CACP9F,KAAMqE,KAmDJlB,gBACAC,mBAtBqB,SAACZ,GAC1BsD,EAAS,CACP9F,KAAMuE,EACNa,QAAS5C,KAoBPO,kBACAC,aAjBe,WACnB8C,EAAS,CACP9F,KAAMyE,MAIR,SAcGtG,EAAMsI,YC1GE,YAACvB,EAAOC,GACrB,OAAQA,EAAOnF,MACb,KAAK0E,EACH,MAAO,CACLpG,OAAQ6G,EAAOC,SAEnB,KAAKT,EACH,MAAO,CACLrG,OAAQ,MAEZ,QACE,OAAO4G,ICyBEgC,GAhCK,SAAC/I,GACnB,IAD6B,EAIHyH,qBAAWuB,GAHhB,CACnB7I,OAAQ,OAFmB,mBAItB4G,EAJsB,KAIfY,EAJe,KAoB7B,OACE,cAAC,EAAcU,SAAf,CACE9G,MAAO,CACLpB,OAAQ4G,EAAM5G,OACdC,cAlBgB,SAACQ,EAAKC,GAC1B8G,EAAS,CACP9F,KAAM0E,EACNU,QAAS,CACPrG,MACAC,eAGJoI,YAAW,WACTtB,EAAS,CACP9F,KAAM2E,MAEP,OAGH,SAMGxG,EAAMsI,YCxBE,YAACvB,EAAOC,GACrB,OAAQA,EAAOnF,MACb,KAAK+E,EACL,KAAKH,EAEH,OADAyC,aAAaC,QAAQ,QAASnC,EAAOC,QAAQmC,OACtC,2BACFrC,GADL,IAEExG,aAAa,EACbD,QAAS,KACT+I,UAAU,IAGd,KAAKvC,GACL,KAAKD,GACL,KAAKH,EAEH,OADAwC,aAAaI,WAAW,SACjB,2BACFvC,GADL,IAEEqC,MAAO,KACPnI,QAAS,KACTV,YAAa,KACbD,QAAS0G,EAAOC,QAChBoC,UAAU,IAGd,KAAK1C,EACH,OAAO,2BACFI,GADL,IAEExG,aAAa,EACbU,QAAS+F,EAAOC,QAChBoC,UAAU,IAId,QACE,OAAOtC,ICnCEwC,GARG,SAACH,GACbA,EACFjC,GAAaqC,SAASC,QAAQC,OAAO,gBAAkBN,SAEhDjC,GAAaqC,SAASC,QAAQC,OAAO,iBC0GjCC,GAjGG,SAAC3J,GACjB,IAAMuI,EAAe,CACnBa,MAAOF,aAAaU,QAAQ,SAC5BrJ,YAAa,KACbU,QAAS,KACTX,QAAS,KACT+I,UAAU,GANe,EAQD5B,qBAAWoC,GAAatB,GARvB,mBAQpBxB,EARoB,KAQbY,EARa,KAWrBxF,EAAgB,uCAAG,WAAO2H,GAAP,iBAAAlC,EAAA,+EAEET,GAAae,KAAK,gBAAiB4B,GAFrC,OAEfnB,EAFe,OAGrBhB,EAAS,CACP9F,KAAM4E,EACNQ,QAAS0B,EAASZ,OAGpB7D,IARqB,gDAWf/D,EAAS,CACbS,IAAK,KAAM+H,SAASZ,KAAKnH,IACzBC,UAAW,gBAEb8G,EAAS,CACP9F,KAAM6E,EACNO,QAAS9G,IAjBU,yDAAH,sDAqBhB+D,EAAkB,uCAAG,8BAAA0D,EAAA,6DACnBwB,EAAQF,aAAaU,QAAQ,WAEjCL,GAAUH,GAHa,kBAMCjC,GAAaU,IAAI,aANlB,OAMjBkC,EANiB,OAOvBpC,EAAS,CACP9F,KAAM8E,EACNM,QAAS8C,EAAUhC,KAAK9G,UATH,gDAYvB+G,QAAQa,IAAR,MAEAlB,EAAS,CACP9F,KAAMgF,KAfe,yDAAH,qDAoBlBrG,EAAa,uCAAG,WAAOsJ,GAAP,iBAAAlC,EAAA,+EAEMT,GAAae,KAAK,YAAa4B,GAFrC,OAEZC,EAFY,OAGlBpC,EAAS,CACP9F,KAAM+E,EACNK,QAAS8C,EAAUhC,OAGrB7D,IARkB,gDAUlB8D,QAAQa,IAAI,KAAMF,SAASZ,KAAKnH,KAC1BT,EAAS,CACbS,IAAK,KAAM+H,SAASZ,KAAKnH,IACzBC,UAAW,gBAEb8G,EAAS,CACP9F,KAAMgF,GACNI,QAAS9G,IAjBO,yDAAH,sDA2BnB,OACE,cAAC,EAAYkI,SAAb,CACE9G,MAAO,CACL6H,MAAOrC,EAAMqC,MACb7I,YAAawG,EAAMxG,YACnBU,QAAS8F,EAAM9F,QACfX,QAASyG,EAAMzG,QACf+I,SAAUtC,EAAMsC,SAChBlH,mBACA3B,gBACA0D,qBACAC,aAjBe,WACnBwD,EAAS,CACP9F,KAAMiF,OAKR,SAaG9G,EAAMsI,Y,SClFE0B,GArBK,SAAC,GAAwC,IAA3BC,EAA0B,EAArCC,UAAyBlK,EAAY,8BACpDF,EAAcG,qBAAWI,GACvBE,EAA8CT,EAA9CS,YAAa2D,EAAiCpE,EAAjCoE,mBAAoBmF,EAAavJ,EAAbuJ,SAKzC,OAJA5I,qBAAU,WACRyD,MAEC,IAED,cAAC,IAAD,2BACMlE,GADN,IAEEmK,OAAQ,SAACnK,GAAD,OACLO,GAAgB8I,EAGf,cAACY,EAAD,eAAejK,IAFf,cAAC,IAAD,CAAUiC,GAAG,WCFjBmH,GAAQF,aAAaU,QAAQ,SAC/BR,IACFG,GAAUH,IAsBGgB,OApBf,WACE,OACE,cAAC,GAAD,UACE,cAAC,GAAD,UACE,cAAC,GAAD,UACE,cAAC,GAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIJ,UAAWnK,IACjC,cAAC,IAAD,CAAOsK,OAAK,EAACC,KAAK,gBAAgBJ,UAAWhI,IAC7C,cAAC,GAAD,CAAamI,OAAK,EAACC,KAAK,aAAaJ,UAAW1E,kBChBjD+E,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASb,OACP,cAAC,IAAMc,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.e89a33bd.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\nconst alertaContext = createContext();\r\nexport default alertaContext;\r\n","import { createContext } from \"react\";\r\nconst authContext = createContext();\r\nexport default authContext;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport AlertaContext from \"../../context/alertas/alertaContext\";\r\nimport AuthContext from \"../../context/autenticacion/authContext\";\r\nimport { Link } from \"react-router-dom\";\r\nconst Login = (props) => {\r\n  // extraer los valores del context\r\n  const alertaContext = useContext(AlertaContext);\r\n  const { alerta, mostrarAlerta } = alertaContext;\r\n\r\n  // extraer los valores del context\r\n  const authContext = useContext(AuthContext);\r\n  const { mensaje, autenticado, iniciarSesion } = authContext;\r\n\r\n  // En caso de que el password o usuario no existan\r\n\r\n  useEffect(() => {\r\n    if (autenticado) {\r\n      props.history.push(\"/proyectos\");\r\n    }\r\n    if (mensaje) {\r\n      mostrarAlerta(mensaje.msg, mensaje.categoria);\r\n    }\r\n    //eslint-disable-next-line\r\n  }, [mensaje, autenticado, props.history]);\r\n  const [usuario, setUser] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const { email, password } = usuario;\r\n  const handleChange = (e) => {\r\n    setUser({\r\n      ...usuario,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // validar que no haya campos vacios\r\n    if (email.trim() === \"\" || password.trim() === \"\") {\r\n      mostrarAlerta(\"Todos los campos son obligatorios\", \"alerta-error\");\r\n    }\r\n\r\n    // Pasarlo al action\r\n    iniciarSesion({ email, password });\r\n  };\r\n  return (\r\n    <div className=\"form-usuario\">\r\n      {alerta ? (\r\n        <div className={`alerta ${alerta.categoria}`}>{alerta.msg}</div>\r\n      ) : null}\r\n      <div className=\"contenedor-form sombra-dark\">\r\n        <h1> Inicia Sesion</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"campo-form\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Tu Email\"\r\n              onChange={handleChange}\r\n              value={email}\r\n            />\r\n          </div>\r\n          <div className=\"campo-form\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"Tu Password\"\r\n              onChange={handleChange}\r\n              value={password}\r\n            />\r\n          </div>\r\n          <div className=\"campo-form\">\r\n            <input\r\n              type=\"submit\"\r\n              className=\"btn btn-primario btn-block\"\r\n              value=\"Iniciar Sesion\"\r\n            />\r\n          </div>\r\n        </form>\r\n        <Link to={\"/nueva-cuenta\"} className=\"enlace-cuenta\">\r\n          {\" \"}\r\n          Obtener Cuenta{\" \"}\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AlertaContext from \"../../context/alertas/alertaContext\";\r\nimport AuthContext from \"../../context/autenticacion/authContext\";\r\nconst NuevaCuenta = (props) => {\r\n  // extraer los valores del context\r\n  const alertaContext = useContext(AlertaContext);\r\n  const { alerta, mostrarAlerta } = alertaContext;\r\n\r\n  // extraer los valores del context\r\n  const authContext = useContext(AuthContext);\r\n  const { mensaje, autenticado, registrarUsuario } = authContext;\r\n  // En caso de que el usuario se haya autenticado o registrado o sea un registro duplicado\r\n\r\n  useEffect(() => {\r\n    if (autenticado) {\r\n      props.history.push(\"/proyectos\");\r\n    }\r\n    if (mensaje) {\r\n      mostrarAlerta(mensaje.msg, mensaje.categoria);\r\n    } //eslint-disable-next-line\r\n  }, [mensaje, autenticado, props.history]);\r\n\r\n  // state para iniciar sesion\r\n  const [usuario, setUser] = useState({\r\n    nombre: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmar: \"\",\r\n  });\r\n  const { nombre, email, password, confirmar } = usuario;\r\n  const handleChange = (e) => {\r\n    setUser({\r\n      ...usuario,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // validar que no haya campos vacios\r\n    if (\r\n      nombre.trim() === \"\" ||\r\n      email.trim() === \"\" ||\r\n      password.trim() === \"\" ||\r\n      confirmar.trim() === \"\"\r\n    ) {\r\n      mostrarAlerta(\"Todos los campos son Obligatorios\", \"alerta-error\");\r\n      return;\r\n    }\r\n    // Password minimo 6 caracteres\r\n    if (password.length < 6) {\r\n      mostrarAlerta(\r\n        \"El password debe ser de al menos 6 caracteres\",\r\n        \"alerta-error\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    // Passwords sean iguales\r\n    if (password !== confirmar) {\r\n      mostrarAlerta(\"Las passwords deben ser iguales\", \"alerta-error\");\r\n      return;\r\n    }\r\n\r\n    // Pasarlo al action\r\n    registrarUsuario({ nombre, email, password });\r\n  };\r\n  return (\r\n    <div className=\"form-usuario\">\r\n      {alerta ? (\r\n        <div className={`alerta ${alerta.categoria}`}>{alerta.msg}</div>\r\n      ) : null}\r\n      <div className=\"contenedor-form sombra-dark\">\r\n        <h1>Obtener una cuenta</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"campo-form\">\r\n            <label htmlFor=\"nombre\">Nombre de usuario</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"nombre\"\r\n              name=\"nombre\"\r\n              placeholder=\"Tu Nombre\"\r\n              onChange={handleChange}\r\n              value={nombre}\r\n            />\r\n          </div>\r\n          <div className=\"campo-form\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Tu Email\"\r\n              onChange={handleChange}\r\n              value={email}\r\n            />\r\n          </div>\r\n          <div className=\"campo-form\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"Tu Password\"\r\n              onChange={handleChange}\r\n              value={password}\r\n            />\r\n          </div>\r\n          <div className=\"campo-form\">\r\n            <label htmlFor=\"confirmar\">Confirmar Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"confirmar\"\r\n              name=\"confirmar\"\r\n              placeholder=\"Repite Password\"\r\n              onChange={handleChange}\r\n              value={confirmar}\r\n            />\r\n          </div>\r\n          <div className=\"campo-form\">\r\n            <input\r\n              type=\"submit\"\r\n              className=\"btn btn-primario btn-block\"\r\n              value=\"Registrarme\"\r\n            />\r\n          </div>\r\n        </form>\r\n        <Link to={\"/\"} className=\"enlace-cuenta\">\r\n          Volver a Iniciar Sesion\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NuevaCuenta;\r\n","import { createContext } from \"react\";\r\n\r\nconst proyectoContext = createContext();\r\n\r\nexport default proyectoContext;\r\n","import React, { useState, useContext } from \"react\";\r\nimport proyectoContext from \"../../context/proyectos/proyectoContext\";\r\n\r\nconst NuevoProyecto = () => {\r\n  // obtener el state del formulario\r\n  const proyectosContext = useContext(proyectoContext);\r\n  const {\r\n    errorFormulario,\r\n    formulario,\r\n    mostrarFormulario,\r\n    agregarProyecto,\r\n    mostrarError,\r\n  } = proyectosContext;\r\n\r\n  const [proyecto, setProyecto] = useState({\r\n    nombre: \"\",\r\n  });\r\n  const { nombre } = proyecto;\r\n  const onChangeProyecto = (e) => {\r\n    setProyecto({\r\n      ...proyecto,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // validar el proyecto\r\n    if (nombre === \"\") {\r\n      mostrarError();\r\n      return;\r\n    }\r\n\r\n    // agregar al state\r\n    agregarProyecto(proyecto);\r\n\r\n    // reiniciar el form\r\n    setProyecto({\r\n      nombre: \"\",\r\n    });\r\n  };\r\n  const onClickFormulario = () => {\r\n    mostrarFormulario();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        className=\"btn btn-block btn-primario\"\r\n        type=\"button\"\r\n        onClick={onClickFormulario}\r\n      >\r\n        Nuevo Proyecto{\" \"}\r\n      </button>{\" \"}\r\n      {formulario ? (\r\n        <form className=\"formulario-nuevo-proyecto\" onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            className=\"input-text\"\r\n            placeholder=\"Nombre Proyecto\"\r\n            name=\"nombre\"\r\n            onChange={onChangeProyecto}\r\n            value={nombre}\r\n          />{\" \"}\r\n          <input\r\n            type=\"submit\"\r\n            className=\"btn btn-primario btn-block\"\r\n            value=\"Agregar Proyecto\"\r\n          />\r\n        </form>\r\n      ) : null}\r\n      {errorFormulario ? (\r\n        <p className=\"mensaje error\">El nombre es obligatorio</p>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NuevoProyecto;\r\n","import { createContext } from \"react\";\r\n\r\nconst tareaContext = createContext();\r\nexport default tareaContext;\r\n","import React, { useContext } from \"react\";\r\nimport proyectoContext from \"../../context/proyectos/proyectoContext\";\r\nimport tareaContext from \"../../context/tareas/tareaContext\";\r\n\r\nconst Proyecto = ({ proyecto }) => {\r\n  // contexto de proyectos\r\n  const proyectosContext = useContext(proyectoContext);\r\n  const { proyectoActual } = proyectosContext;\r\n  // contexto de tareas\r\n  const tareasContext = useContext(tareaContext);\r\n  const { obtenerTareas } = tareasContext;\r\n\r\n  // funcion para agregar el proyecto actual\r\n  const seleccionarProyecto = (id) => {\r\n    proyectoActual(id); // fijaer proyecto actual\r\n    obtenerTareas(id); // filtrar las tareas cuando se de click\r\n  };\r\n  return (\r\n    <li>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-blank\"\r\n        onClick={() => seleccionarProyecto(proyecto._id)}\r\n      >\r\n        {proyecto.nombre}\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Proyecto;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport Proyecto from \"./Proyecto\";\r\nimport proyectoContext from \"../../context/proyectos/proyectoContext\";\r\nimport alertaContext from \"../../context/alertas/alertaContext\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nconst ListadoProyectos = () => {\r\n  const alertasContext = useContext(alertaContext);\r\n  const { alerta, mostrarAlerta } = alertasContext;\r\n  // extraer proyectos del state inicial\r\n  const proyectosContext = useContext(proyectoContext);\r\n  const { mensaje, proyectos, obtenerProyectos } = proyectosContext;\r\n  // revisar si proyectos tiene contenido\r\n  useEffect(() => {\r\n    if (mensaje) {\r\n      mostrarAlerta(mensaje.msg, mensaje.categoria);\r\n    }\r\n    obtenerProyectos();\r\n    //eslint-disable-next-line\r\n  }, [mensaje]);\r\n  if (proyectos.length === 0)\r\n    return <p>No hay Proyectos, comienza creando uno!</p>;\r\n\r\n  return (\r\n    <ul className=\"listado-proyectos\">\r\n      {alerta ? (\r\n        <div className={`alerta ${alerta.categoria}`}>{alerta.msg}</div>\r\n      ) : null}\r\n      <TransitionGroup>\r\n        {proyectos.map((proyecto) => (\r\n          <CSSTransition key={proyecto._id} timeout={200} classNames=\"proyecto\">\r\n            <Proyecto proyecto={proyecto} />\r\n          </CSSTransition>\r\n        ))}\r\n      </TransitionGroup>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ListadoProyectos;\r\n","import React from \"react\";\r\nimport NuevoProyecto from \"../proyectos/NuevoProyecto\";\r\nimport ListadoProyectos from \"../proyectos/ListadoProyectos\";\r\nconst Sidebar = () => {\r\n  return (\r\n    <aside>\r\n      <h1>\r\n        {\" \"}\r\n        MERN <span> Tasks</span>\r\n      </h1>\r\n      <NuevoProyecto />\r\n      <div className=\"proyectos\">\r\n        <h2> Tus Proyectos </h2>\r\n        <ListadoProyectos />\r\n      </div>\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport AuthContext from \"../../context/autenticacion/authContext\";\r\n\r\nconst Barra = () => {\r\n  const authContext = useContext(AuthContext);\r\n  const { usuarioAutenticado, usuario, cerrarSesion } = authContext;\r\n  useEffect(() => {\r\n    usuarioAutenticado();\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <header className=\"app-header\">\r\n      {usuario ? (\r\n        <p className=\"nombre-usuario\">\r\n          Hola <span>{usuario.nombre}</span>\r\n        </p>\r\n      ) : null}\r\n\r\n      <nav className=\"nav-principal\">\r\n        <button\r\n          className=\"btn btn-blank cerrar-sesion\"\r\n          onClick={() => cerrarSesion()}\r\n        >\r\n          Cerrar Sesion\r\n        </button>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Barra;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport proyectoContext from \"../../context/proyectos/proyectoContext\";\r\nimport tareaContext from \"../../context/tareas/tareaContext\";\r\n\r\nconst FormTarea = () => {\r\n  const [tarea, setTarea] = useState({\r\n    nombre: \"\",\r\n  });\r\n  const proyectosContext = useContext(proyectoContext);\r\n\r\n  const { proyecto } = proyectosContext;\r\n  // Extraer tareas\r\n  const tareasContext = useContext(tareaContext);\r\n  const {\r\n    errorTarea,\r\n    agregarTarea,\r\n    validarTarea,\r\n    obtenerTareas,\r\n    tareaSeleccionada,\r\n    actualizarTarea,\r\n    limpiarTarea,\r\n  } = tareasContext;\r\n\r\n  // Effect que detecta si hay una tarea seleccionada\r\n  useEffect(() => {\r\n    if (tareaSeleccionada !== null) {\r\n      setTarea(tareaSeleccionada);\r\n    } else {\r\n      setTarea({\r\n        nombre: \"\",\r\n      });\r\n    }\r\n  }, [tareaSeleccionada]);\r\n\r\n  const { nombre } = tarea;\r\n  // si no hay proyectos seleccionados\r\n  if (!proyecto) return null;\r\n  // Array destructuring para extraer el proyecto actual\r\n  const [proyectoActual] = proyecto;\r\n\r\n  const handleChange = (e) => {\r\n    setTarea({\r\n      ...tarea,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // validar\r\n    if (nombre.trim() === \"\") {\r\n      validarTarea();\r\n      return;\r\n    }\r\n    // Revisar si es edicion o nueva Tarea\r\n    if (tareaSeleccionada === null) {\r\n      // tarea nueva\r\n      // agregar la nueva tarea al state\r\n      tarea.proyecto = proyectoActual._id;\r\n      agregarTarea(tarea);\r\n    } else {\r\n      // tarea existente\r\n      actualizarTarea(tarea);\r\n      limpiarTarea();\r\n    }\r\n\r\n    // obtener y filtrar las tareas\r\n    obtenerTareas(proyectoActual.id);\r\n    // reiniciar el formulario\r\n    setTarea({\r\n      nombre: \"\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"formulario\">\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"contenedor-input\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"input-text\"\r\n            placeholder=\"Nombre Tarea...\"\r\n            name=\"nombre\"\r\n            value={nombre}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"contenedor-input\">\r\n          <input\r\n            type=\"submit\"\r\n            className=\"btn btn-primario btn-submit btn-block\"\r\n            value={tareaSeleccionada ? \"Editar Tarea\" : \"Agregar Tarea\"}\r\n          />\r\n        </div>\r\n      </form>\r\n      {errorTarea ? (\r\n        <p className=\"mensaje error\">El nombre de la tarea es obligatorio</p>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormTarea;\r\n","import React, { useContext } from \"react\";\r\nimport tareaContext from \"../../context/tareas/tareaContext\";\r\nimport proyectoContext from \"../../context/proyectos/proyectoContext\";\r\n\r\nconst Tarea = ({ tarea }) => {\r\n  const proyectosContext = useContext(proyectoContext);\r\n  const { proyecto } = proyectosContext;\r\n\r\n  const context = useContext(tareaContext);\r\n  const {\r\n    eliminarTarea,\r\n    obtenerTareas,\r\n    actualizarTarea,\r\n    guardarTareaActual,\r\n  } = context;\r\n\r\n  const [proyectoActual] = proyecto;\r\n\r\n  const tareaAEliminar = (id) => {\r\n    eliminarTarea(id, proyectoActual._id);\r\n    obtenerTareas(proyectoActual.id);\r\n  };\r\n  const cambiarEstado = (tarea) => {\r\n    if (tarea.estado) {\r\n      tarea.estado = false;\r\n    } else {\r\n      tarea.estado = true;\r\n    }\r\n    actualizarTarea(tarea);\r\n  };\r\n\r\n  const seleccionarTarea = (tarea) => {\r\n    guardarTareaActual(tarea);\r\n  };\r\n\r\n  return (\r\n    <li className=\"tarea sombra\">\r\n      <p>{tarea.nombre} </p>\r\n      <div className=\"estado\">\r\n        {tarea.estado ? (\r\n          <button\r\n            type=\"button\"\r\n            className=\"completo\"\r\n            onClick={() => cambiarEstado(tarea)}\r\n          >\r\n            Completo\r\n          </button>\r\n        ) : (\r\n          <button\r\n            type=\"button\"\r\n            className=\"incompleto\"\r\n            onClick={() => cambiarEstado(tarea)}\r\n          >\r\n            Incompleto\r\n          </button>\r\n        )}\r\n      </div>\r\n      <div className=\"acciones\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primario\"\r\n          onClick={() => seleccionarTarea(tarea)}\r\n        >\r\n          Editar\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-secundario\"\r\n          onClick={() => tareaAEliminar(tarea._id)}\r\n        >\r\n          Eliminar\r\n        </button>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Tarea;\r\n","import React, { useContext } from \"react\";\r\nimport Tarea from \"./Tarea\";\r\nimport proyectoContext from \"../../context/proyectos/proyectoContext\";\r\nimport tareaContext from \"../../context/tareas/tareaContext\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\n\r\nconst ListadoTareas = () => {\r\n  // Extraer proyectos del state inicial\r\n  const proyectosContext = useContext(proyectoContext);\r\n  const { proyecto, eliminarProyecto } = proyectosContext;\r\n  // Extraer tareas del state\r\n  const tareasContext = useContext(tareaContext);\r\n  const { tareasProyecto } = tareasContext;\r\n\r\n  // si no hay proyectos seleccionados\r\n  if (!proyecto) return <h2>Selecciona un Proyecto</h2>;\r\n\r\n  // Array destructuring para extraer el proyecto actual\r\n  const [proyectoActual] = proyecto;\r\n  const onClickEliminar = () => {\r\n    eliminarProyecto(proyectoActual._id);\r\n  };\r\n  return (\r\n    <>\r\n      <h2>Proyecto: {proyectoActual.nombre}</h2>\r\n      <ul className=\"listado-tareas\">\r\n        {tareasProyecto.length === 0 ? (\r\n          <li className=\"tarea\">\r\n            <p>No hay tareas</p>\r\n          </li>\r\n        ) : (\r\n          <TransitionGroup>\r\n            {tareasProyecto.map((tarea) => (\r\n              <CSSTransition key={tarea.id} timeout={200} classNames=\"tarea\">\r\n                <Tarea tarea={tarea} />\r\n              </CSSTransition>\r\n            ))}\r\n          </TransitionGroup>\r\n        )}\r\n      </ul>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-eliminar\"\r\n        onClick={onClickEliminar}\r\n      >\r\n        Eliminar Proyecto &times;\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListadoTareas;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport Sidebar from \"../layout/Sidebar\";\r\nimport Barra from \"../layout/Barra\";\r\nimport FormTarea from \"../tareas/FormTarea\";\r\nimport ListadoTareas from \"../tareas/ListadoTareas\";\r\nimport AuthContext from \"../../context/autenticacion/authContext\";\r\nconst Proyectos = () => {\r\n  const authContext = useContext(AuthContext);\r\n  const { usuarioAutenticado } = authContext;\r\n  useEffect(() => {\r\n    usuarioAutenticado();\r\n    //eslint-disable-next-line\r\n  }, []);\r\n  return (\r\n    <div className=\"contenedor-app\">\r\n      <Sidebar />\r\n      <div className=\"seccion-principal\">\r\n        <Barra />\r\n        <main>\r\n          <FormTarea />\r\n          <div className=\"contenedor-tareas\">\r\n            <ListadoTareas />\r\n          </div>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Proyectos;\r\n","// PROYECTOS\r\nexport const FORMULARIO_PROYECTO = \"FORMULARIO_PROYECTO\";\r\nexport const OBTENER_PROYECTOS = \"OBTENER_PROYECTOS\";\r\nexport const AGREGAR_PROYECTO = \"AGREGAR_PROYECTO\";\r\nexport const VALIDAR_FORMULARIO = \"VALIDAR_FORMULARIO\";\r\nexport const PROYECTO_ACTUAL = \"PROYECTO_ACTUAL\";\r\nexport const ELIMINAR_PROYECTO = \"ELIMINAR_PROYECTO\";\r\nexport const PROYECTO_ERROR = \"PROYECTO_ERROR\";\r\n// TAREAS\r\nexport const TAREAS_PROYECTO = \"TAREAS_PROYECTO\";\r\nexport const AGREGAR_TAREA = \"AGREGAR_TAREA\";\r\nexport const VALIDAR_TAREA = \"VALIDAR_TAREA\";\r\nexport const ELIMINAR_TAREA = \"ELIMINAR_TAREA\";\r\nexport const ESTADO_TAREA = \"ESTADO_TAREA\";\r\nexport const TAREA_ACTUAL = \"TAREA_ACTUAL\";\r\nexport const ACTUALIZAR_TAREA = \"ACTUALIZAR_TAREA\";\r\nexport const LIMPIAR_TAREA = \"LIMPIAR_TAREA\";\r\n\r\nexport const MOSTRAR_ALERTA = \" MOSTRAR_ALERTA\";\r\nexport const OCULTAR_ALERTA = \"OCULTAR_ALERTA\";\r\n\r\nexport const REGISTRO_EXITOSO = \"REGISTRO_EXITOSO\";\r\nexport const REGISTRO_ERROR = \"REGISTRO_ERROR\";\r\nexport const OBTENER_USUARIO = \"OBTENER_USUARIO\";\r\nexport const LOGIN_EXITOSO = \"LOGIN_EXITOSO\";\r\nexport const LOGIN_ERROR = \"LOGIN_ERROR\";\r\nexport const CERRAR_SESION = \"CERRAR_SESION\";\r\n","import {\r\n  FORMULARIO_PROYECTO,\r\n  OBTENER_PROYECTOS,\r\n  AGREGAR_PROYECTO,\r\n  VALIDAR_FORMULARIO,\r\n  PROYECTO_ACTUAL,\r\n  ELIMINAR_PROYECTO,\r\n  PROYECTO_ERROR,\r\n} from \"../../types\";\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case FORMULARIO_PROYECTO:\r\n      return {\r\n        ...state,\r\n        formulario: true,\r\n      };\r\n    case AGREGAR_PROYECTO:\r\n      return {\r\n        ...state,\r\n        proyectos: [...state.proyectos, action.payload],\r\n        formulario: false,\r\n        errorFormulario: false,\r\n      };\r\n    case OBTENER_PROYECTOS:\r\n      return {\r\n        ...state,\r\n        proyectos: action.payload,\r\n      };\r\n    case VALIDAR_FORMULARIO:\r\n      return {\r\n        ...state,\r\n        errorFormulario: true,\r\n      };\r\n    case PROYECTO_ACTUAL:\r\n      return {\r\n        ...state,\r\n        proyecto: state.proyectos.filter(\r\n          (proyecto) => proyecto._id === action.payload\r\n        ),\r\n      };\r\n    case ELIMINAR_PROYECTO:\r\n      return {\r\n        ...state,\r\n        proyectos: state.proyectos.filter(\r\n          (proyecto) => proyecto._id !== action.payload\r\n        ),\r\n        proyecto: null,\r\n      };\r\n    case PROYECTO_ERROR: {\r\n      return {\r\n        ...state,\r\n        mensaje: action.payload,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import axios from \"axios\";\r\n\r\nconst clienteAxios = axios.create({\r\n  baseURL: process.env.REACT_APP_BACKEND_URL,\r\n});\r\nexport default clienteAxios;\r\n","import React, { useReducer } from \"react\";\r\nimport proyectoContext from \"./proyectoContext\";\r\nimport proyectoReducer from \"./proyectoReducer\";\r\nimport clienteAxios from \"../../config/axios\";\r\nimport {\r\n  AGREGAR_PROYECTO,\r\n  FORMULARIO_PROYECTO,\r\n  OBTENER_PROYECTOS,\r\n  VALIDAR_FORMULARIO,\r\n  PROYECTO_ACTUAL,\r\n  ELIMINAR_PROYECTO,\r\n  PROYECTO_ERROR,\r\n} from \"../../types\";\r\n\r\nconst ProyectoState = (props) => {\r\n  const initialState = {\r\n    proyectos: [],\r\n    formulario: false,\r\n    errorFormulario: false,\r\n    proyecto: null,\r\n    mensaje: null,\r\n  };\r\n  // Dispatch para ejecutar las acciones\r\n  const [state, dispatch] = useReducer(proyectoReducer, initialState);\r\n  // Serie de funciones para el CRUD\r\n  const mostrarFormulario = () => {\r\n    dispatch({\r\n      type: FORMULARIO_PROYECTO,\r\n    });\r\n  };\r\n\r\n  // Obtener los proyectos\r\n  const obtenerProyectos = async () => {\r\n    try {\r\n      const resultado = await clienteAxios.get(\"/api/proyectos\");\r\n      dispatch({\r\n        type: OBTENER_PROYECTOS,\r\n        payload: resultado.data.proyectos,\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  // agregar nuevo proyecto\r\n  const agregarProyecto = async (proyecto) => {\r\n    // insertar el proyecto en el state\r\n    try {\r\n      const resultado = await clienteAxios.post(\"/api/proyectos\", proyecto);\r\n      dispatch({\r\n        type: AGREGAR_PROYECTO,\r\n        payload: resultado.data,\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  // VALIDAR EL FORMULARIO\r\n  const mostrarError = () => {\r\n    dispatch({\r\n      type: VALIDAR_FORMULARIO,\r\n    });\r\n  };\r\n  // selecciona el proyecto que el usuario dio click\r\n  const proyectoActual = (proyectoId) => {\r\n    dispatch({\r\n      type: PROYECTO_ACTUAL,\r\n      payload: proyectoId,\r\n    });\r\n  };\r\n  // eliminar un proyecto\r\n  const eliminarProyecto = async (proyectoId) => {\r\n    try {\r\n      await clienteAxios.delete(`/api/proyectos/${proyectoId}`);\r\n      dispatch({\r\n        type: ELIMINAR_PROYECTO,\r\n        payload: proyectoId,\r\n      });\r\n    } catch (error) {\r\n      const alerta = {\r\n        msg: \"Hubo un error\",\r\n        categoria: \"alerta-error\",\r\n      };\r\n      dispatch({\r\n        type: PROYECTO_ERROR,\r\n        payload: alerta,\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <proyectoContext.Provider\r\n      value={{\r\n        proyectos: state.proyectos,\r\n        formulario: state.formulario,\r\n        mensaje: state.mensaje,\r\n        errorFormulario: state.errorFormulario,\r\n        proyecto: state.proyecto,\r\n        mostrarFormulario,\r\n        obtenerProyectos,\r\n        agregarProyecto,\r\n        mostrarError,\r\n        proyectoActual,\r\n        eliminarProyecto,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </proyectoContext.Provider>\r\n  );\r\n};\r\nexport default ProyectoState;\r\n","import {\r\n  AGREGAR_TAREA,\r\n  TAREAS_PROYECTO,\r\n  VALIDAR_TAREA,\r\n  ELIMINAR_TAREA,\r\n  TAREA_ACTUAL,\r\n  ACTUALIZAR_TAREA,\r\n  LIMPIAR_TAREA,\r\n} from \"../../types\";\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case TAREAS_PROYECTO:\r\n      return {\r\n        ...state,\r\n        tareasProyecto: action.payload,\r\n      };\r\n    case AGREGAR_TAREA:\r\n      return {\r\n        ...state,\r\n        tareasProyecto: [action.payload, ...state.tareasProyecto],\r\n        errorTarea: false,\r\n      };\r\n    case VALIDAR_TAREA:\r\n      return {\r\n        ...state,\r\n        errorTarea: true,\r\n      };\r\n    case ELIMINAR_TAREA:\r\n      return {\r\n        ...state,\r\n        tareasProyecto: state.tareasProyecto.filter(\r\n          (tarea) => tarea._id !== action.payload\r\n        ),\r\n      };\r\n    case ACTUALIZAR_TAREA:\r\n      return {\r\n        ...state,\r\n        tareasProyecto: state.tareasProyecto.map((tarea) =>\r\n          tarea._id === action.payload._id ? action.payload : tarea\r\n        ),\r\n      };\r\n    case TAREA_ACTUAL:\r\n      return {\r\n        ...state,\r\n        tareaSeleccionada: action.payload,\r\n      };\r\n    case LIMPIAR_TAREA:\r\n      return {\r\n        ...state,\r\n        tareaSeleccionada: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useReducer } from \"react\";\r\nimport TareaContext from \"./tareaContext\";\r\nimport TareaReducer from \"./tareaReducer\";\r\nimport clienteAxios from \"../../config/axios\";\r\nimport {\r\n  TAREAS_PROYECTO,\r\n  AGREGAR_TAREA,\r\n  VALIDAR_TAREA,\r\n  ELIMINAR_TAREA,\r\n  TAREA_ACTUAL,\r\n  ACTUALIZAR_TAREA,\r\n  LIMPIAR_TAREA,\r\n} from \"../../types\";\r\nconst initialState = {\r\n  tareasProyecto: [],\r\n  errorTarea: false,\r\n  tareaSeleccionada: null,\r\n};\r\nconst TareaState = (props) => {\r\n  // Crear dispatch y state\r\n  const [state, dispatch] = useReducer(TareaReducer, initialState);\r\n\r\n  // Crear las Funciones\r\n\r\n  const obtenerTareas = async (proyecto) => {\r\n    try {\r\n      const response = await clienteAxios.get(\"/api/tareas\", {\r\n        params: { proyecto },\r\n      });\r\n\r\n      dispatch({\r\n        type: TAREAS_PROYECTO,\r\n        payload: response.data.tareas,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const agregarTarea = async (tarea) => {\r\n    try {\r\n      const response = await clienteAxios.post(\"/api/tareas\", tarea);\r\n      dispatch({\r\n        type: AGREGAR_TAREA,\r\n        payload: tarea,\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const validarTarea = () => {\r\n    dispatch({\r\n      type: VALIDAR_TAREA,\r\n    });\r\n  };\r\n  const eliminarTarea = async (id, proyecto) => {\r\n    try {\r\n      await clienteAxios.delete(`/api/tareas/${id}`, {\r\n        params: { proyecto },\r\n      });\r\n      dispatch({\r\n        type: ELIMINAR_TAREA,\r\n        payload: id,\r\n      });\r\n    } catch (error) {}\r\n  };\r\n  const actualizarTarea = async (tarea) => {\r\n    console.log(tarea);\r\n    try {\r\n      const resultado = await clienteAxios.put(\r\n        `/api/tareas/${tarea._id}`,\r\n        tarea\r\n      );\r\n      console.log(resultado);\r\n      dispatch({\r\n        type: ACTUALIZAR_TAREA,\r\n        payload: resultado.data.tarea,\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const guardarTareaActual = (tarea) => {\r\n    dispatch({\r\n      type: TAREA_ACTUAL,\r\n      payload: tarea,\r\n    });\r\n  };\r\n\r\n  const limpiarTarea = () => {\r\n    dispatch({\r\n      type: LIMPIAR_TAREA,\r\n    });\r\n  };\r\n  return (\r\n    <TareaContext.Provider\r\n      value={{\r\n        tareasProyecto: state.tareasProyecto,\r\n        errorTarea: state.errorTarea,\r\n        tareaSeleccionada: state.tareaSeleccionada,\r\n        obtenerTareas,\r\n        agregarTarea,\r\n        validarTarea,\r\n        eliminarTarea,\r\n        guardarTareaActual,\r\n        actualizarTarea,\r\n        limpiarTarea,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </TareaContext.Provider>\r\n  );\r\n};\r\n\r\nexport default TareaState;\r\n","import { MOSTRAR_ALERTA, OCULTAR_ALERTA } from \"../../types/index\";\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case MOSTRAR_ALERTA:\r\n      return {\r\n        alerta: action.payload,\r\n      };\r\n    case OCULTAR_ALERTA:\r\n      return {\r\n        alerta: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useReducer } from \"react\";\r\nimport alertaReducer from \"./alertaReducer\";\r\nimport alertaContext from \"./alertaContext\";\r\n\r\nimport { MOSTRAR_ALERTA, OCULTAR_ALERTA } from \"../../types/index\";\r\n\r\nconst AlertaState = (props) => {\r\n  const initialState = {\r\n    alerta: null,\r\n  };\r\n  const [state, dispatch] = useReducer(alertaReducer, initialState);\r\n  //Funciones\r\n  const mostrarAlerta = (msg, categoria) => {\r\n    dispatch({\r\n      type: MOSTRAR_ALERTA,\r\n      payload: {\r\n        msg,\r\n        categoria,\r\n      },\r\n    });\r\n    setTimeout(() => {\r\n      dispatch({\r\n        type: OCULTAR_ALERTA,\r\n      });\r\n    }, 5000);\r\n  };\r\n  return (\r\n    <alertaContext.Provider\r\n      value={{\r\n        alerta: state.alerta,\r\n        mostrarAlerta,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </alertaContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AlertaState;\r\n","import {\r\n  REGISTRO_ERROR,\r\n  REGISTRO_EXITOSO,\r\n  OBTENER_USUARIO,\r\n  LOGIN_ERROR,\r\n  LOGIN_EXITOSO,\r\n  CERRAR_SESION,\r\n} from \"../../types/index\";\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case LOGIN_EXITOSO:\r\n    case REGISTRO_EXITOSO: {\r\n      localStorage.setItem(\"token\", action.payload.token);\r\n      return {\r\n        ...state,\r\n        autenticado: true,\r\n        mensaje: null,\r\n        cargando: false,\r\n      };\r\n    }\r\n    case CERRAR_SESION:\r\n    case LOGIN_ERROR:\r\n    case REGISTRO_ERROR: {\r\n      localStorage.removeItem(\"token\");\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        usuario: null,\r\n        autenticado: null,\r\n        mensaje: action.payload,\r\n        cargando: false,\r\n      };\r\n    }\r\n    case OBTENER_USUARIO: {\r\n      return {\r\n        ...state,\r\n        autenticado: true,\r\n        usuario: action.payload,\r\n        cargando: false,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import clienteAxios from \"./axios\";\r\nconst tokenAuth = (token) => {\r\n  if (token) {\r\n    clienteAxios.defaults.headers.common[\"x-auth-token\"] = token;\r\n  } else {\r\n    delete clienteAxios.defaults.headers.common[\"x-auth-token\"];\r\n  }\r\n};\r\n\r\nexport default tokenAuth;\r\n","import React, { useReducer } from \"react\";\r\nimport AuthContext from \"./authContext\";\r\nimport AuthReducer from \"./authReducer\";\r\nimport clienteAxios from \"../../config/axios\";\r\nimport tokenAuth from \"../../config/token\";\r\nimport {\r\n  REGISTRO_ERROR,\r\n  REGISTRO_EXITOSO,\r\n  OBTENER_USUARIO,\r\n  LOGIN_ERROR,\r\n  LOGIN_EXITOSO,\r\n  CERRAR_SESION,\r\n} from \"../../types/index\";\r\n\r\nconst AuthState = (props) => {\r\n  const initialState = {\r\n    token: localStorage.getItem(\"token\"),\r\n    autenticado: null,\r\n    usuario: null,\r\n    mensaje: null,\r\n    cargando: true,\r\n  };\r\n  const [state, dispatch] = useReducer(AuthReducer, initialState);\r\n  // Las funciones\r\n\r\n  const registrarUsuario = async (datos) => {\r\n    try {\r\n      const response = await clienteAxios.post(\"/api/usuarios\", datos);\r\n      dispatch({\r\n        type: REGISTRO_EXITOSO,\r\n        payload: response.data,\r\n      });\r\n      // obtener el usuario\r\n      usuarioAutenticado();\r\n    } catch (error) {\r\n      // console.log(error.response.data.msg);\r\n      const alerta = {\r\n        msg: error.response.data.msg,\r\n        categoria: \"alerta-error\",\r\n      };\r\n      dispatch({\r\n        type: REGISTRO_ERROR,\r\n        payload: alerta,\r\n      });\r\n    }\r\n  };\r\n  const usuarioAutenticado = async () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      tokenAuth(token);\r\n    }\r\n    try {\r\n      const respuesta = await clienteAxios.get(\"/api/auth\");\r\n      dispatch({\r\n        type: OBTENER_USUARIO,\r\n        payload: respuesta.data.usuario,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n\r\n      dispatch({\r\n        type: LOGIN_ERROR,\r\n      });\r\n    }\r\n  };\r\n  //cuando el usuario inicia sesion\r\n  const iniciarSesion = async (datos) => {\r\n    try {\r\n      const respuesta = await clienteAxios.post(\"/api/auth\", datos);\r\n      dispatch({\r\n        type: LOGIN_EXITOSO,\r\n        payload: respuesta.data,\r\n      });\r\n      // Obtener el usuario\r\n      usuarioAutenticado();\r\n    } catch (error) {\r\n      console.log(error.response.data.msg);\r\n      const alerta = {\r\n        msg: error.response.data.msg,\r\n        categoria: \"alerta-error\",\r\n      };\r\n      dispatch({\r\n        type: LOGIN_ERROR,\r\n        payload: alerta,\r\n      });\r\n    }\r\n  };\r\n  const cerrarSesion = () => {\r\n    dispatch({\r\n      type: CERRAR_SESION,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        token: state.token,\r\n        autenticado: state.autenticado,\r\n        usuario: state.usuario,\r\n        mensaje: state.mensaje,\r\n        cargando: state.cargando,\r\n        registrarUsuario,\r\n        iniciarSesion,\r\n        usuarioAutenticado,\r\n        cerrarSesion,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\nexport default AuthState;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport AuthContext from \"../../context/autenticacion/authContext\";\r\n\r\nconst RutaPrivada = ({ component: Component, ...props }) => {\r\n  const authContext = useContext(AuthContext);\r\n  const { autenticado, usuarioAutenticado, cargando } = authContext;\r\n  useEffect(() => {\r\n    usuarioAutenticado();\r\n    //eslint-disable-next-line\r\n  }, []);\r\n  return (\r\n    <Route\r\n      {...props}\r\n      render={(props) =>\r\n        !autenticado && !cargando ? (\r\n          <Redirect to=\"/\" />\r\n        ) : (\r\n          <Component {...props} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default RutaPrivada;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Login from \"./components/auth/Login\";\nimport NuevaCuenta from \"./components/auth/NuevaCuenta\";\nimport Proyectos from \"./components/proyectos/Proyectos\";\nimport ProyectoState from \"./context/proyectos/proyectoState\";\nimport TareaState from \"./context/tareas/tareaState\";\nimport AlertaState from \"./context/alertas/alertaState\";\nimport AuthState from \"./context/autenticacion/authState\";\nimport tokenAuth from \"./config/token\";\nimport RutaPrivada from \"./components/rutas/RutaPrivada\";\n\n//Revisar si tenemos un token\n\nconst token = localStorage.getItem(\"token\");\nif (token) {\n  tokenAuth(token);\n}\nfunction App() {\n  return (\n    <ProyectoState>\n      <TareaState>\n        <AlertaState>\n          <AuthState>\n            <Router>\n              <Switch>\n                <Route exact path=\"/\" component={Login} />\n                <Route exact path=\"/nueva-cuenta\" component={NuevaCuenta} />\n                <RutaPrivada exact path=\"/proyectos\" component={Proyectos} />\n              </Switch>\n            </Router>\n          </AuthState>\n        </AlertaState>\n      </TareaState>\n    </ProyectoState>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}